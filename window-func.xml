<!DOCTYPE chapter>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
    xml:id="internalfunc-window">

        <info>
            <title>Оконные (аналитические) функции</title>
            <keywordset>
                <keyword>OVER</keyword>
            </keywordset>
        </info>
    
        <indexterm><primary>OVER</primary></indexterm>
    
        <para>Согласно SQL спецификации оконные функции (также известные как аналитические функции)
            являются своего рода агрегатными функциями, не уменьшающими степень детализации. При
            этом агрегированные данные выводятся вместе с неагрегированными.</para>
        <para>Синтаксически вызов оконной функции есть указание её имени, за которым всегда следует
            ключевое слово OVER() с возможными аргументами внутри скобок. В этом и заключается её
            синтаксическое отличие от обычной функции или агрегатной функции. Оконные функции могут
            находиться только в списке SELECT и предложении ORDER BY.</para>
        <para>Предложение OVER может содержать указания выполнить действия с разбивкой по группам
            (&quot;секционирование&quot;) и сортировку.</para>
        <formalpara>
            <title>Доступно в:</title>

            <para>DSQL. </para>
        </formalpara>
        <formalpara>
            <title>Синтаксис:</title>

            <para><programlisting>
<replaceable>&lt;window function&gt;</replaceable> ::=    
  <replaceable>&lt;window function name&gt;</replaceable>([<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;expr&gt;</replaceable> ...]]) 
    OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])       

<replaceable>&lt;partition_exp&gt;</replaceable> ::= PARTITION BY <replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;expr&gt;</replaceable> ...]

<replaceable>&lt;order_exp&gt;</replaceable> ::= 
  ORDER BY <replaceable>&lt;expr&gt;</replaceable> [<replaceable>&lt;direction&gt;</replaceable>] [<replaceable>&lt;nulls placement&gt;</replaceable>]  
        [, <replaceable>&lt;expr&gt;</replaceable> [<replaceable>&lt;direction&gt;</replaceable>] [<replaceable>&lt;nulls placement&gt;</replaceable>] ...]

<replaceable>&lt;direction&gt;</replaceable> ::= {ASC | DESC} 

<replaceable>&lt;nulls placement&gt;</replaceable> ::= NULLS {FIRST | LAST} 
                
<replaceable>&lt;window function name&gt;</replaceable> ::=
     <replaceable>&lt;aggregate function&gt;</replaceable> 
   | <replaceable>&lt;ranking function&gt;</replaceable>
   | <replaceable>&lt;navigation function&gt;</replaceable> 
                
<replaceable>&lt;ranking function&gt;</replaceable> ::= RANK | DENSE_RANK | ROW_NUMBER

<replaceable>&lt;navigation function&gt;</replaceable> ::= LEAD | LAG | FIRST_VALUE | LAST_VALUE | NTH_VALUE
            </programlisting></para>
        </formalpara>

        <para>
            <table frame="all">
                <?dbfo keep-together='auto'?>
                <title>Параметры оконных функций</title>
                <tgroup cols="2">
                    <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                    <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                    <thead>
                        <row>
                            <entry align="center">Параметр</entry>
                            <entry align="center">Описание</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><replaceable>expr</replaceable></entry>
                            <entry>
                                <para>Выражение. Может содержать столбец таблицы, константу,
                                    переменную, выражение, скалярную или агрегатную функцию. Оконные
                                    функции в качестве выражения не допускаются.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>partition_exp</replaceable></entry>
                            <entry>
                                <para>Выражение секционирования.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>order_exp</replaceable></entry>
                            <entry>
                                <para>Выражение сортировки.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>direction</replaceable></entry>
                            <entry>
                                <para>Наравление сортировки.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>nulls placement</replaceable></entry>
                            <entry>
                                <para>Положение псевдозначения NULL в отсортированном наборе.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>aggregate function</replaceable></entry>
                            <entry>
                                <para>Агрегатная функция.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>ranking function</replaceable></entry>
                            <entry>
                                <para>Ранжирующая функция.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><replaceable>navigation function</replaceable></entry>
                            <entry>
                                <para>Навигационная функция.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <section xml:id="internalfunc-window-agg">
            <info>
                <title>Агрегатные функции</title>
            </info>
            <para>Все агрегатные функции могут быть использованы в качестве оконных функций, при
                добавлении предложения OVER. </para>
            <para>Допустим, у нас есть таблица EMPLOYEE со столбцами ID, NAME и SALARY. Нам
                необходимо показать для каждого сотрудника, соответствующую ему заработную плату и
                процент от фонда заработной платы.</para>
            <para>Простым запросом это решается следующим
                образом:<programlisting language="sql">
select
    id,
    department,
    salary,
    salary / (select sum(salary) from employee) percentage
from employee
order by id;                
            </programlisting></para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id department salary percentage
-- ---------- ------ ----------
1  R &amp; D       10.00     0.2040
2  SALES       12.00     0.2448
3  SALES        8.00     0.1632
4  R &amp; D        9.00     0.1836
5  R &amp; D       10.00     0.2040                    
                </screen>
                </para>
            </formalpara>
            <para>Запрос повторяется и может работать довольно долго, особенно если EMPLOYEE
                является сложным представлением.</para>
            <para>Этот запрос может быть переписан в более быстрой и элегантной форме с
                использованием оконных
                функций:<programlisting language="sql">
select
  id,
  department,
  salary,
  salary / sum(salary) OVER () percentage
from employee
order by id;                    
            </programlisting></para>
            <para>Здесь <emphasis role="bold">sum(salary) OVER ()</emphasis> вычисляет сумму всех
                зарплат из запроса (таблицы сотрудников). </para>
        </section>
        <section xml:id="internalfunc-window-partition">
            <info>
                <title>Секционирование</title>
                <keywordset>
                    <keyword>PARTITION BY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>OVER</primary>
                <secondary>PARTITION BY</secondary>
            </indexterm>
            <para>Как и для агрегатных функций, которые могут работать отдельно или по отношению к
                группе, оконные функции тоже могут работать для групп, которые называются
                &quot;секциями&quot; (partition) или разделами. </para>
            <formalpara>
                <title>Синтаксис:</title>

                <para><programlisting>
<replaceable>&lt;window function&gt;</replaceable>(...) OVER (PARTITION BY <replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;expr&gt;</replaceable> ...])                      
            </programlisting></para>
            </formalpara>
            <para>Для каждой строки, оконная функция обсчитывает только строки, которые попадают в
                то же самую секцию, что и текущая строка.</para>
            <para>Агрегирование над группой может давать более одной строки, таким образом, к
                результирующему набору, созданному секционированием, присоединяются результаты из
                основного запроса, используя тот же список выражений, что и для секции.</para>
            <para>Продолжая пример с сотрудниками, вместо того чтобы считать процент зарплаты
                каждого сотрудника от суммарной зарплаты сотрудников, посчитаем процент от суммарной
                зарплаты сотрудников того же
                отдела:<programlisting language="sql">
select
  id,
  department,
  salary,
  salary / sum(salary) OVER (PARTITION BY department) percentage
from employee
order by id;                    
            </programlisting></para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id department salary percentage
-- ---------- ------ ----------
1  R &amp; D       10.00     0.3448
2  SALES       12.00     0.6000
3  SALES        8.00     0.4000
4  R &amp; D        9.00     0.3103
5  R &amp; D       10.00     0.3448                   
                </screen>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-window-order">
            <info>
                <title>Сортировка</title>
                <keywordset>
                    <keyword>ORDER BY</keyword>
                </keywordset>
            </info>
            <indexterm>
                <primary>OVER</primary>
                <secondary>ORDER BY</secondary>
            </indexterm>
            <para>Предложение ORDER BY может быть использовано с секционированием или без него.
                Предложение ORDER BY внутри OVER задаёт порядок, в котором оконная функция будет
                обрабатывать строки. Этот порядок не обязан совпадать с порядком вывода строк. </para>
            <para>Есть ещё одно важное понятие, связанное с оконными функциями: для каждой строки
                существует набор строк в её разделе, называемый <emphasis role="italic">рамкой
                    окна</emphasis> (кадры окна). По умолчанию, с указанием ORDER BY рамка состоит
                из всех строк от начала раздела до текущей строки и строк, равных текущей по
                значению выражения ORDER BY. Без ORDER BY рамка по умолчанию состоит из всех строк
                раздела.</para>
            <para>Таким образом, для стандартных агрегатных функций, предложение ORDER BY заставляет
                возвращать частичные результаты агрегации по мере обработки записей.</para>
            <formalpara>
                <title>Пример</title>
                <para>
                    <programlisting language="sql">
SELECT
  id,
  salary,
SUM(salary) OVER (ORDER BY salary) AS cumul_salary
FROM employee
ORDER BY salary;                 
                </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary cumul_salary
-- ------ ------------
3    8.00         8.00
4    9.00        17.00
1   10.00        37.00
5   10.00        37.00
2   12.00        49.00                 
                </screen>
                </para>
            </formalpara>
            <para>В этом случае cumul_salary возвращает частичную/накопительную агрегацию (функции
                SUM). Может показаться странным, что значение 37,00 повторяется для идентификаторов
                1 и 5, но так и должно быть. Сортировка (ORDER BY) ключей группирует их вместе, и
                агрегат вычисляется единожды (но суммируя сразу два значения 10,00). Чтобы избежать
                этого, вы можете добавить поле ID в конце предложения ORDER BY.</para>
            <para>Вы можете использовать несколько окон с различными сортировками, и дополнять
                предложение ORDER BY опциями ASC/DESC и NULLS FIRST/LAST.</para>
            <para>С секциями предложение ORDER BY работает таким же образом, но на границе каждой
                секции агрегаты сбрасываются.</para>
            <para>Все агрегатные функции могут использовать предложение ORDER BY, за исключением
                LIST().</para>
            <para>Следующий пример показывает сумму кредита, накопленную сумму выплат и остаток по
                выплатам.</para>
            <formalpara>
                <title>Пример</title>
                <para>
                    <programlisting language="sql">
SELECT
  payments.id AS id,
  payments.bydate AS bydate,
  credit.amount AS credit_amount,
  payments.amount AS pay,
  SUM(payments.amount) OVER(ORDER BY payments.bydate) AS s_amount,
  SUM(payments.amount) OVER(ORDER BY payments.bydate,
                                     payments.id) AS s_amount2,
  credit.amount - SUM(payments.amount) OVER(ORDER BY payments.bydate,
                                                     payments.id) AS balance
FROM credit
JOIN payments ON payments.credit_id = credit.id
WHERE credit.id = 1
ORDER BY payments.bydate                
                </programlisting>
                </para>
            </formalpara>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
ID BYDATE     CREDIT_AMOUNT PAY    S_AMOUNT S_AMOUNT2 BALANCE
-- ---------- ------------- ------ -------- --------- ----------
1  15.01.2015 1000000       100000  100000  100000    900000
2  15.02.2015 1000000       150000  250000  250000    750000
3  15.03.2015 1000000       130000  400000  380000    620000
4  15.03.2015 1000000        20000  400000  400000    600000
5  15.04.2015 1000000       200000  600000  600000    400000
6  15.05.2015 1000000       150000  750000  750000    250000
7  15.06.2015 1000000       150000 1000000  900000    100000
8  15.06.2015 1000000       100000 1000000 1000000         0               
                </screen>
                </para>
            </formalpara>
        </section>
        <section xml:id="internalfunc-window-rank">
            <info>
                <title>Ранжирующие функции</title>
            </info>
            <para>Ранжирующие функции вычисляют порядковый номер ранга внутри секции окна. </para>
            <para>Эти функции могут применяться с использованием секционирования и сортировки и без
                них. Однако их использование без сортировки почти никогда не имеет смысла.</para>
            <para>Функции ранжирования могут быть использованы для создания различных типов
                инкрементных счётчиков. Рассмотрим SUM(1) OVER (ORDER BY SALARY) в качестве примера
                того, что они могут делать, каждая из них различным образом. Ниже приведён пример
                запроса, который позволяет сравнить их поведение по сравнению с SUM.</para>
            <para>Пример:
                <programlisting language="sql">
SELECT
  id,
  salary,
  DENSE_RANK() OVER (ORDER BY salary),
  RANK() OVER (ORDER BY salary),
  ROW_NUMBER() OVER (ORDER BY salary),
  SUM(1) OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
            </para>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary dense_rank rank row_number sum
-- ------ ---------- ---- ---------- ---
3    8.00          1    1          1   1
4    9.00          2    2          2   2
1   10.00          3    3          3   4
5   10.00          3    3          4   4
2   12.00          4    5          5   5                
                </screen>
                </para>
            </formalpara>
            <section xml:id="internalfunc-window-rank-dense_rank">
                <info>
                    <title>DENSE_RANK</title>
                    <keywordset>
                        <keyword>DENSE_RANK</keyword>
                    </keywordset>
                </info>

                <indexterm><primary>DENSE_RANK</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
DENSE_RANK() OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])                  
                </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Возвращает ранг строк в секции результирующего набора без промежутков в
                    ранжировании. Строки с одинаковыми значениями
                        <replaceable>&lt;order_exp&gt;</replaceable> получают одинаковый ранг в
                    пределах группы <replaceable>&lt;partition_exp&gt;</replaceable>, если она
                    указана. Ранг строки равен количеству различных значений рангов в секции,
                    предшествующих текущей строке, увеличенному на единицу.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  DENSE_RANK() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary dense_rank 
-- ------ ---------- 
3    8.00          1    
4    9.00          2    
1   10.00          3    
5   10.00          3    
2   12.00          4                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-rank">RANK</link>, <link
                            linkend="internalfunc-window-rank-row_number">ROW_NUMBER</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-rank">
                <info>
                    <title>RANK</title>
                    <keywordset>
                        <keyword>RANK</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>RANK</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
RANK() OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])                  
                </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Возвращает ранг каждой строки в секции результирующего набора. Строки с
                    одинаковыми значениями <replaceable>&lt;order_exp&gt;</replaceable> получают
                    одинаковый ранг в пределах группы
                        <replaceable>&lt;partition_exp&gt;</replaceable>, если она указана. Ранг
                    строки вычисляется как единица плюс количество рангов, находящихся до этой
                    строки.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  RANK() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary rank 
-- ------ ------ 
3    8.00      1    
4    9.00      2    
1   10.00      3    
5   10.00      3    
2   12.00      5                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-dense_rank">DENSE_RANK</link>, <link
                            linkend="internalfunc-window-rank-row_number">ROW_NUMBER</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-rank-row_number">
                <info>
                    <title>ROW_NUMBER</title>
                    <keywordset>
                        <keyword>ROW_NUMBER</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>ROW_NUMBER</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
ROW_NUMBER() OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])       
                                 </programlisting>
                    </para>
                </formalpara>
                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>BIGINT</para>
                </formalpara>

                <para>Возвращает последовательный номер строки в секции результирующего набора, где
                    1 соответствует первой строке в каждой из секций.</para>
                <para>Пример:
                    <programlisting language="sql">
SELECT
  id,
  salary,
  ROW_NUMBER() OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                
                </programlisting>
                </para>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
id salary row_number 
-- ------ ---------- 
3    8.00          1    
4    9.00          2    
1   10.00          3    
5   10.00          4    
2   12.00          5                   
                </screen>
                    </para>
                </formalpara>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-rank-rank">RANK</link>, <link
                            linkend="internalfunc-window-rank-dense_rank">DENSE_RANK</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-window-nav">
            <info>
                <title>Навигационные функции</title>
            </info>
            <para>Навигационные функции получают простые (не агрегированные) значения выражения из
                другой строки запроса в той же секции.</para>
            <important>
                <para>Функции FIRST_VALUE, LAST_VALUE и NTH_VALUE оперируют на рамке окна (кадрах
                    окна). В настоящее время в Firebird рамка окна всегда определена от первой до
                    текущей строки, но не последней,
                    т.е.<programlisting>
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW                        
                    </programlisting>
                </para>
                <para>Из-за этого результаты функций NTH_VALUE и в особенности LAST_VALUE могут
                    показаться странными.</para>
                <para>Речь идёт о предложении рамки окна (кадрирования). Для каждой строки, внутри
                    её разбиения, существует список строк, который называется рамкой окна. Многие
                    (но не все) оконные функции работают только со строками рамки окна, а не со всем
                    разбиением. По умолчанию, если задано предложение ORDER BY, то рамка состоит из
                    всех строк, от начала разбиения до текущей строки, плюс любые следующие строки,
                    которые равны текущей строке в соответствии с предложением ORDER BY. Когда ORDER
                    BY опускается, по умолчанию рамка состоит из всех строк в разбиении.</para>
                <para>В настоящее время предложение рамки окна (кадрирования) не реализовано см.
                        <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="http://tracker.firebirdsql.org/browse/CORE-3647"
                        >CORE-3647</link>. </para>
            </important>
            <example>
                <title>Навигационные функции</title>
                <para><programlisting language="sql">
SELECT
  id,
  salary,
  FIRST_VALUE(salary) OVER (ORDER BY salary),
  LAST_VALUE(salary) OVER (ORDER BY salary),
  NTH_VALUE(salary, 2) OVER (ORDER BY salary),
  LAG(salary) OVER (ORDER BY salary),
  LEAD(salary) OVER (ORDER BY salary)
FROM employee
ORDER BY salary;                    
                </programlisting></para>
            </example>
            <formalpara>
                <title>Результат</title>
                <para>
                    <screen>
id salary first_value last_value nth_value    lag   lead
-- ------ ----------- ---------- --------- ------ ------
3    8.00        8.00       8.00    &lt;null&gt; &lt;null&gt;   9.00
4    9.00        8.00       9.00      9.00   8.00  10.00
1   10.00        8.00      10.00      9.00   9.00  10.00
5   10.00        8.00      10.00      9.00  10.00  12.00
2   12.00        8.00      12.00      9.00  10.00 &lt;null&gt;                
                </screen>
                </para>
            </formalpara>
            <section xml:id="internalfunc-window-nav-first_value">
                <info>
                    <title>FIRST_VALUE</title>
                    <keywordset>
                        <keyword>FIRST_VALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>FIRST_VALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
FIRST_VALUE(<replaceable>&lt;expr&gt;</replaceable>) OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])                  
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора FIRST_VALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Возвращает первое значение из упорядоченного набора значений.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-last_value">LAST_VALUE</link>, <link
                            linkend="internalfunc-window-nav-nth_value">NTH_VALUE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-lag">
                <info>
                    <title>LAG</title>
                    <keywordset>
                        <keyword>LAG</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LAG</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LAG(<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;offset&gt;</replaceable> [, <replaceable>&lt;default&gt;</replaceable>]]) 
  OVER([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])                 
                </programlisting></para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора LAG</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>offset</replaceable></entry>
                                    <entry>
                                        <para>Количество строк до строки перед текущей строкой, из
                                            которой необходимо получить значение. Если значение
                                            аргумента не указано, то по умолчанию принимается 1.
                                                <replaceable>offset</replaceable> может быть
                                            столбцом, вложенным запросом или другим выражением, с
                                            помощью которого вычисляется целая положительная
                                            величина, или другим типом, который может быть неявно
                                            преобразован в bigint. <replaceable>offset</replaceable>
                                            не может быть отрицательным значением или аналитической
                                            функцией.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>default</replaceable></entry>
                                    <entry>
                                        <para>Значение по умолчанию, которое возвращается, в случае
                                            если смещение (<replaceable>offset</replaceable>)
                                            указывает за пределы секции. По умолчанию равно
                                            NULL</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция LAG обеспечивает доступ к строке с заданным физическим смещением
                        (<replaceable>offset</replaceable>) перед началом текущей строки. </para>
                <para>Если смещение (<replaceable>offset</replaceable>) указывает за пределы секции,
                    то будет возвращено значение <replaceable>default</replaceable>, которое по
                    умолчанию равно NULL.</para>

                <bridgehead renderas="sect5">Примеры:</bridgehead>

                <example>
                    <title>Использование функции LAG</title>
                    <para>Предположим у вас есть таблица rate, которая хранит курс валюты на каждый
                        день. Необходимо проследить динамику изменения курса за последние пять
                        дней.<programlisting language="sql">
SELECT
  bydate,
  cost,
  cost - LAG(cost) OVER(ORDER BY bydate) AS change,
  100 * (cost - LAG(cost) OVER(ORDER BY bydate)) /
    LAG(cost) OVER(ORDER BY bydate) AS percent_change
FROM rate
WHERE bydate BETWEEN DATEADD(-4 DAY TO current_date)
  AND current_date
ORDER BY bydate
                </programlisting></para>
                </example>
                <formalpara>
                    <title>Результат</title>
                    <para>
                        <screen>
bydate        cost    change   percent_change
----------   -----   -------   --------------
27.10.2014   31.00    &lt;null&gt;           &lt;null&gt;
28.10.2014   31.53      0.53           1.7096
29.10.2014   31.40     -0.13          -0.4123
30.10.2014   31.67      0.27           0.8598
31.10.2014   32.00      0.33           1.0419              
                </screen>
                    </para>
                </formalpara>

                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-lead">LEAD</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-last_value">
                <info>
                    <title>LAST_VALUE</title>
                    <keywordset>
                        <keyword>LAST_VALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LAST_VALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LAST_VALUE(<replaceable>&lt;expr&gt;</replaceable>) OVER([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])                  
                </programlisting>
                    </para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора LAST_VALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Возвращает последнее значение из упорядоченного набора значений.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-first_value">FIRST_VALUE</link>, <link
                            linkend="internalfunc-window-nav-nth_value">NTH_VALUE</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-lead">
                <info>
                    <title>LEAD</title>
                    <keywordset>
                        <keyword>LEAD</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>LEAD</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
LEAD(<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;offset&gt;</replaceable> [, <replaceable>&lt;default&gt;</replaceable>]])
  OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])                  
                </programlisting></para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора LEAD</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>offset</replaceable></entry>
                                    <entry>
                                        <para>Количество строк после текущей строки до строки, из
                                            которой необходимо получить значение. Если значение
                                            аргумента не указано, то по умолчанию принимается 1.
                                                 <replaceable>offset</replaceable> может быть
                                            столбцом, вложенным запросом или другим выражением, с
                                            помощью которого вычисляется целая положительная
                                            величина, или другим типом, который может быть неявно
                                            преобразован в bigint.
                                            <replaceable>offset</replaceable> не может быть
                                            отрицательным значением или аналитической
                                            функцией.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>default</replaceable></entry>
                                    <entry>
                                        <para>Значение по умолчанию, которое возвращается, в случае
                                            если смещение (<replaceable>offset</replaceable>)
                                            указывает за пределы секции. По умолчанию равно
                                            NULL.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция LEAD обеспечивает доступ к строке на заданном физическом смещении
                        (<replaceable>offset</replaceable>) после текущей строки. </para>
                <para>Если смещение (<replaceable>offset</replaceable>) указывает за пределы секции,
                    то будет возвращено значение <replaceable>default</replaceable>, которое по
                    умолчанию равно NULL.</para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-lag">LAG</link>. </para>
                </formalpara>
            </section>
            <section xml:id="internalfunc-window-nav-nth_value">
                <info>
                    <title>NTH_VALUE</title>
                    <keywordset>
                        <keyword>NTH_VALUE</keyword>
                    </keywordset>
                </info>
                <indexterm><primary>NTH_VALUE</primary></indexterm>
                <formalpara>
                    <title>Доступно в:</title>

                    <para>DSQL.</para>
                </formalpara>
                <formalpara>
                    <title>Синтаксис:</title>
                    <para>
                        <programlisting>
NTH_VALUE(<replaceable>&lt;expr&gt;</replaceable> [, <replaceable>&lt;offset&gt;</replaceable>]) [FROM FIRST | FROM LAST]
  OVER ([<replaceable>&lt;partition_exp&gt;</replaceable>] [<replaceable>&lt;order_exp&gt;</replaceable>])             
                </programlisting></para>
                </formalpara>

                <para>
                    <table frame="all">
                        <?dbfo keep-together='auto'?>
                        <title>Параметры оператора NTH_VALUE</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.2*" align="left"/>
                            <colspec colname="c2" colnum="2" colwidth="2.8*" align="justify"/>
                            <thead>
                                <row>
                                    <entry align="center">Параметр</entry>
                                    <entry align="center">Описание</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry><replaceable>expr</replaceable></entry>
                                    <entry>
                                        <para>Выражение. Может содержать столбец таблицы, константу,
                                            переменную, выражение, неагрегатную функцию или UDF.
                                            Агрегатные функции в качестве выражения не
                                            допускаются.</para>
                                    </entry>
                                </row>
                                <row>
                                    <entry><replaceable>offset</replaceable></entry>
                                    <entry>
                                        <para>Номер записи, начиная с первой (опция FROM FIRST) или
                                            последней (опция FROM LAST) записи.</para>
                                    </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>

                <formalpara>
                    <title>Тип возвращаемого результата:</title>
                    <para>тот же что и аргумент функции <replaceable>expr</replaceable>.</para>
                </formalpara>

                <para>Функция NTH_VALUE возвращает N-ое значение, начиная с первой (опция FROM
                    FIRST) или последней (опция FROM LAST) записи. По умолчанию используется опция
                    FROM FIRST. Смещение 1 от первой записи будет эквивалентно функции FIRST_VALUE,
                    смещение 1 от последней записи будет эквивалентно функции LAST_VALUE. </para>
                <formalpara>
                    <title>См. также:</title>

                    <para>
                        <link linkend="dml-select">SELECT</link>, <link
                            linkend="internalfunc-window-partition">PARTITION BY</link>, <link
                            linkend="internalfunc-window-order">ORDER BY</link>, <link
                            linkend="internalfunc-window-nav-first_value">FIRST_VALUE</link>, <link
                            linkend="internalfunc-window-nav-last_value">LAST_VALUE</link>. </para>
                </formalpara>
            </section>
        </section>
        <section xml:id="internalfunc-window-aggarg">
            <info>
                <title>Агрегатные функции внутри оконных</title>
            </info>
            <para>В качестве аргументов оконных функций, а также в предложении OVER разрешено
                использование агрегатных функций (но не оконных). В этом случае сначала вычисляются
                агрегатные функции, а только затем на них накладываются окна оконных функций.</para>
            <note>
                <para>При использовании агрегатных функции в качестве аргументов оконных функций,
                    все столбцы, не используемые в агрегатных функциях должны быть указаны в
                    предложении GROUP BY.</para>
            </note>

            <example>
                <title>Использование агрегатной функции в качестве аргумента оконной</title>
                <para><programlisting language="sql">
SELECT
    code_employee_group,
    AVG(salary) AS avg_salary,
    RANK() OVER(ORDER BY AVG(salary)) AS salary_rank
FROM employee
GROUP BY code_employee_group  
</programlisting></para>
            </example>
        </section>
</chapter>

